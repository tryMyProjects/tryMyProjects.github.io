{"version":3,"sources":["components/ShelfUpdater.js","components/BooksAPI.js","components/BookSearch.js","components/CurrentlyReading.js","components/WantToRead.js","components/Read.js","components/RenderBooks.js","components/HomeLibrary.js","components/App.js","index.js"],"names":["ShelfUpdater","book","updateShelf","shelf","className","defaultValue","onChange","event","target","value","disabled","api","token","localStorage","Math","random","toString","substr","headers","Accept","Authorization","BookSearch","Books","useState","query","setQuery","result","setResult","i","length","j","id","to","type","maxResults","fetch","method","body","JSON","stringify","then","res","json","data","books","BooksAPI","trim","list","startsWith","placeholder","map","b","style","width","height","backgroundImage","imageLinks","thumbnail","title","authors","currentlyReading","Shelf","filter","WantToRead","Read","RenderBooks","CurrentlyReading","HomeLibrary","App","setBooks","useEffect","a","getBooks","doUpdate","newShelf","concat","exact","path","element","ReactDOM","render","document","getElementById"],"mappings":"wRA6BeA,EA3BM,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,KAAMC,EAAkB,EAAlBA,YACxBC,EAAQ,QACZ,OAAIF,QAAJ,IAAIA,OAAJ,EAAIA,EAAME,SACRA,EAAK,OAAGF,QAAH,IAAGA,OAAH,EAAGA,EAAME,OAMhB,OACE,qBAAKC,UAAU,qBAAf,SACE,yBAAQC,aAAcF,EAAOG,SANX,SAACC,GACrBL,EAAYD,EAAMM,EAAMC,OAAOC,QAK7B,UACE,wBAAQA,MAAM,KAAKC,UAAQ,EAA3B,wBAGA,wBAAQD,MAAM,mBAAd,+BACA,wBAAQA,MAAM,aAAd,0BACA,wBAAQA,MAAM,OAAd,kBACA,wBAAQA,MAAM,OAAd,wB,OCpBFE,EAAM,wCAERC,EAAQC,aAAaD,MAEpBA,IAAOA,EAAQC,aAAaD,MAAQE,KAAKC,SAASC,SAAS,IAAIC,QAAQ,IAE5E,IAAMC,EAAU,CACdC,OAAQ,mBACRC,cAAeR,GC4EFS,EA9EI,SAAC,GAkBlB,IAlB8C,IAA1BnB,EAAyB,EAAzBA,YAAaoB,EAAY,EAAZA,MAAY,EACnBC,mBAAS,IADU,mBACtCC,EADsC,KAC/BC,EAD+B,OAEjBF,mBAAS,IAFQ,mBAEtCG,EAFsC,KAE9BC,EAF8B,KAkBpCC,EAAI,EAAGA,EAAIF,EAAOG,OAAQD,IACjC,IAAK,IAAIE,EAAI,EAAGA,EAAIR,EAAMO,OAAQC,IAAK,CACF,IAAD,EAAlC,GAAIJ,EAAOE,GAAGG,KAAOT,EAAMQ,GAAGC,GAC5BL,EAAOE,GAAGzB,MAAV,UAAkBmB,EAAMQ,UAAxB,aAAkB,EAAU3B,MAKlC,OACE,sBAAKC,UAAU,eAAf,UACE,sBAAKA,UAAU,mBAAf,UACE,cAAC,IAAD,CAAMA,UAAU,eAAe4B,GAAG,IAAlC,mBAGA,qBAAK5B,UAAU,6BAAf,SACE,uBACE6B,KAAK,OACLxB,MAAOe,EACPlB,SAhCK,SAACC,GACd,IAAMiB,EAAQjB,EAAMC,OAAOC,MAC3BgB,EAASD,GACK,KAAVA,GAA0B,MAAVA,EDkBF,SAACA,EAAOU,GAAR,OACpBC,MAAM,GAAD,OAAIxB,EAAJ,WAAkB,CACrByB,OAAQ,OACRlB,QAAQ,2BACHA,GADE,IAEL,eAAgB,qBAElBmB,KAAMC,KAAKC,UAAU,CAAEf,QAAOU,iBAE7BM,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACG,GAAD,OAAUA,EAAKC,SC3BnBC,CAAgBrB,EAAMsB,OAAQ,IAAIN,MAAK,SAACO,IAClC,OAAJA,QAAI,IAAJA,OAAA,EAAAA,EAAMlB,QAAS,EAAIF,EAAUoB,GAAQpB,EAAU,QAExCH,EAAMwB,WAAW,IAAK,GAC/BrB,EAAU,MAyBJsB,YAAY,mCAIlB,qBAAK7C,UAAU,uBAAf,SACE,oBAAIA,UAAU,aAAd,SACqB,IAAlBsB,EAAOG,QAA0B,KAAVL,EACtBE,EAAOwB,KAAI,SAACC,GAAD,aACT,+BACG,IACD,sBAAK/C,UAAU,OAAf,UACE,sBAAKA,UAAU,WAAf,UACE,qBACEA,UAAU,aACVgD,MAAO,CACLC,MAAO,IACPC,OAAQ,IACRC,gBAAgB,OAAD,cAASJ,QAAT,IAASA,GAAT,UAASA,EAAGK,kBAAZ,aAAS,EAAeC,UAAxB,QAGnB,cAAC,EAAD,CAAcxD,KAAMkD,EAAGjD,YAAaA,OAEtC,qBAAKE,UAAU,aAAf,gBAA6B+C,QAA7B,IAA6BA,OAA7B,EAA6BA,EAAGO,QAChC,qBAAKtD,UAAU,eAAf,gBAA+B+C,QAA/B,IAA+BA,OAA/B,EAA+BA,EAAGQ,aAC7B,MAhBT,OAASR,QAAT,IAASA,OAAT,EAASA,EAAGpB,OAoBd,yDC9BG6B,EAtCU,SAAC,GAAmC,IAAjCtC,EAAgC,EAAhCA,MAAOpB,EAAyB,EAAzBA,YAAa2D,EAAY,EAAZA,MAC9C,OACE,sBAAKzD,UAAU,YAAf,UACE,oBAAIA,UAAU,kBAAd,+BACA,qBAAKA,UAAU,kBAAf,SACE,oBAAIA,UAAU,aAAd,SACGkB,EAAMwC,QAAO,SAACX,GAAD,OAAQ,OAADA,QAAC,IAADA,OAAA,EAAAA,EAAGhD,SAAU0D,KAAOX,KAAI,SAACC,GAAD,aAC3C,6BACE,sBAAK/C,UAAU,OAAf,UACE,sBAAKA,UAAU,WAAf,UACE,qBACEA,UAAU,aACVgD,MAAO,CACLC,MAAO,IACPC,OAAQ,IACRC,gBAAgB,OAAD,cAASJ,QAAT,IAASA,GAAT,UAASA,EAAGK,kBAAZ,aAAS,EAAeC,UAAxB,MALnB,SAQG,MAEH,cAAC,EAAD,CAAcxD,KAAMkD,EAAGjD,YAAaA,OAEtC,qBAAKE,UAAU,aAAf,gBAA6B+C,QAA7B,IAA6BA,OAA7B,EAA6BA,EAAGO,QAChC,qBAAKtD,UAAU,eAAf,gBAA+B+C,QAA/B,IAA+BA,OAA/B,EAA+BA,EAAGQ,cAhBtC,OAASR,QAAT,IAASA,OAAT,EAASA,EAAGpB,eC6BTgC,EApCI,SAAC,GAAmC,IAAjCzC,EAAgC,EAAhCA,MAAOpB,EAAyB,EAAzBA,YAAa2D,EAAY,EAAZA,MACxC,OACE,sBAAKzD,UAAU,YAAf,UACE,oBAAIA,UAAU,kBAAd,0BACA,qBAAKA,UAAU,kBAAf,SACE,oBAAIA,UAAU,aAAd,SACGkB,EAAMwC,QAAO,SAACX,GAAD,OAAQ,OAADA,QAAC,IAADA,OAAA,EAAAA,EAAGhD,SAAU0D,KAAOX,KAAI,SAACC,GAAD,aAC3C,6BACE,sBAAK/C,UAAU,OAAf,UACE,sBAAKA,UAAU,WAAf,UACE,qBACEA,UAAU,aACVgD,MAAO,CACLC,MAAO,IACPC,OAAQ,IACRC,gBAAgB,OAAD,cAASJ,QAAT,IAASA,GAAT,UAASA,EAAGK,kBAAZ,aAAS,EAAeC,UAAxB,QAGnB,cAAC,EAAD,CAAcxD,KAAMkD,EAAGjD,YAAaA,OAEtC,sBAAKE,UAAU,aAAf,qBAA8B+C,QAA9B,IAA8BA,OAA9B,EAA8BA,EAAGO,SACjC,qBAAKtD,UAAU,eAAf,gBAA+B+C,QAA/B,IAA+BA,OAA/B,EAA+BA,EAAGQ,cAdtC,OAASR,QAAT,IAASA,OAAT,EAASA,EAAGpB,eC4BTiC,EAnCF,SAAC,GAAmC,IAAjC1C,EAAgC,EAAhCA,MAAOpB,EAAyB,EAAzBA,YAAa2D,EAAY,EAAZA,MAClC,OACE,sBAAKzD,UAAU,YAAf,UACE,oBAAIA,UAAU,kBAAd,kBACA,qBAAKA,UAAU,kBAAf,SACE,oBAAIA,UAAU,aAAd,SACGkB,EAAMwC,QAAO,SAACX,GAAD,OAAQ,OAADA,QAAC,IAADA,OAAA,EAAAA,EAAGhD,SAAU0D,KAAOX,KAAI,SAACC,GAAD,aAC3C,6BACE,sBAAK/C,UAAU,OAAf,UACE,sBAAKA,UAAU,WAAf,UACE,qBACEA,UAAU,aACVgD,MAAO,CACLC,MAAO,IACPC,OAAQ,IACRC,gBAAgB,OAAD,cAASJ,QAAT,IAASA,GAAT,UAASA,EAAGK,kBAAZ,aAAS,EAAeC,UAAxB,QAGnB,cAAC,EAAD,CAAcxD,KAAMkD,EAAGjD,YAAaA,OAEtC,sBAAKE,UAAU,aAAf,qBAA8B+C,QAA9B,IAA8BA,OAA9B,EAA8BA,EAAGO,SACjC,qBAAKtD,UAAU,eAAf,gBAA+B+C,QAA/B,IAA+BA,OAA/B,EAA+BA,EAAGQ,cAdtC,OAASR,QAAT,IAASA,OAAT,EAASA,EAAGpB,eC2BTkC,EAhCK,SAAC,GAA4B,IAA1B3C,EAAyB,EAAzBA,MAAOpB,EAAkB,EAAlBA,YAC5B,OACE,sBAAKE,UAAU,aAAf,UACE,qBAAKA,UAAU,mBAAf,SACE,2CAEF,qBAAKA,UAAU,qBAAf,SACE,gCACE,cAAC8D,EAAD,CACE5C,MAAOA,EACPpB,YAAaA,EACb2D,MAAM,qBAER,cAAC,EAAD,CACEvC,MAAOA,EACPpB,YAAaA,EACb2D,MAAM,eAER,cAAC,EAAD,CAAMvC,MAAOA,EAAOpB,YAAaA,EAAa2D,MAAM,cAGxD,qBAAKzD,UAAU,cAAf,SACE,cAAC,IAAD,CAAM4B,GAAG,UAAT,gCCZOmC,EAZK,SAAC,GAA4B,IAA1B7C,EAAyB,EAAzBA,MAAOpB,EAAkB,EAAlBA,YAC5B,OACE,qBAAKE,UAAU,MAAf,SACE,cAAC,EAAD,CAAakB,MAAOA,EAAOpB,YAAaA,OC8B/BkE,EA7BH,WAAO,IAAD,EACU7C,mBAAS,IADnB,mBACTqB,EADS,KACFyB,EADE,KAGhBC,qBAAU,YACM,uCAAG,4BAAAC,EAAA,sEPMnBpC,MAAM,GAAD,OAAIxB,EAAJ,UAAiB,CAAEO,YACrBsB,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACG,GAAD,OAAUA,EAAKC,SORJ,OACTG,EADS,OAEfsB,EAAStB,GAFM,2CAAH,qDAIdyB,KACC,IAEH,IAAMC,EAAW,SAACxE,EAAMyE,IPGJ,SAACzE,EAAME,GAC3BgC,MAAM,GAAD,OAAIxB,EAAJ,kBAAiBV,EAAK8B,IAAM,CAC/BK,OAAQ,MACRlB,QAAQ,2BACHA,GADE,IAEL,eAAgB,qBAElBmB,KAAMC,KAAKC,UAAU,CAAEpC,YACtBqC,MAAK,SAACC,GAAD,OAASA,EAAIC,UOVnBG,CAAgB5C,EAAMyE,GACtBzE,EAAKE,MAAQuE,EACbL,EAASzB,EAAMkB,QAAO,SAACX,GAAD,OAAQ,OAADA,QAAC,IAADA,OAAA,EAAAA,EAAGpB,MAAO9B,EAAK8B,MAAI4C,OAAO1E,KAGzD,OACE,eAAC,IAAD,WACE,cAAC,IAAD,CACE2E,OAAK,EACLC,KAAK,IACLC,QAAS,cAAC,EAAD,CAAaxD,MAAOsB,EAAO1C,YAAauE,MAEnD,cAAC,IAAD,CAAOI,KAAK,UAAUC,QAAS,cAAC,EAAD,CAAY5E,YAAauE,EAAUnD,MAAOsB,UCzB/EmC,IAASC,OACP,cAAC,IAAD,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.273a46d7.chunk.js","sourcesContent":["import PropTypes from \"prop-types\";\r\n\r\nconst ShelfUpdater = ({ book, updateShelf }) => {\r\n  let shelf = \"none\";\r\n  if (book?.shelf) {\r\n    shelf = book?.shelf;\r\n  }\r\n  const handleUpdates = (event) => {\r\n    updateShelf(book, event.target.value);\r\n  };\r\n\r\n  return (\r\n    <div className=\"book-shelf-changer\">\r\n      <select defaultValue={shelf} onChange={handleUpdates}>\r\n        <option value=\"no\" disabled>\r\n          Move to...\r\n        </option>\r\n        <option value=\"currentlyReading\">Currently Reading</option>\r\n        <option value=\"wantToRead\">Want to Read</option>\r\n        <option value=\"read\">Read</option>\r\n        <option value=\"none\">None</option>\r\n      </select>\r\n    </div>\r\n  );\r\n};\r\nShelfUpdater.propTypes = {\r\n  book: PropTypes.object.isRequired,\r\n  updateShelf: PropTypes.func.isRequired,\r\n};\r\nexport default ShelfUpdater;\r\n","const api = \"https://reactnd-books-api.udacity.com\";\r\n\r\nlet token = localStorage.token;\r\n\r\nif (!token) token = localStorage.token = Math.random().toString(36).substr(-8);\r\n\r\nconst headers = {\r\n  Accept: \"application/json\",\r\n  Authorization: token,\r\n};\r\n\r\nexport const get = (bookId) =>\r\n  fetch(`${api}/books/${bookId}`, { headers })\r\n    .then((res) => res.json())\r\n    .then((data) => data.book);\r\n\r\nexport const getAll = () =>\r\n  fetch(`${api}/books`, { headers })\r\n    .then((res) => res.json())\r\n    .then((data) => data.books);\r\n\r\nexport const update = (book, shelf) =>\r\n  fetch(`${api}/books/${book.id}`, {\r\n    method: \"PUT\",\r\n    headers: {\r\n      ...headers,\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n    body: JSON.stringify({ shelf }),\r\n  }).then((res) => res.json());\r\n\r\nexport const search = (query, maxResults) =>\r\n  fetch(`${api}/search`, {\r\n    method: \"POST\",\r\n    headers: {\r\n      ...headers,\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n    body: JSON.stringify({ query, maxResults }),\r\n  })\r\n    .then((res) => res.json())\r\n    .then((data) => data.books);\r\n","import { Link } from \"react-router-dom\";\r\nimport { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport ShelfUpdater from \"./ShelfUpdater\";\r\nimport * as BooksAPI from \"./BooksAPI\";\r\n\r\nconst BookSearch = ({ updateShelf, Books }) => {\r\n  const [query, setQuery] = useState(\"\");\r\n  const [result, setResult] = useState([]);\r\n\r\n  const Search = (event) => {\r\n    const query = event.target.value;\r\n    setQuery(query);\r\n    if (query !== \"\" && query !== \" \") {\r\n      BooksAPI.search(query.trim(), 20).then((list) => {\r\n        list?.length > 0 ? setResult(list) : setResult([]);\r\n      });\r\n    } else if (query.startsWith(\" \", 0)) {\r\n      setResult([]);\r\n    } else {\r\n      setResult([]);\r\n    }\r\n  };\r\n  \r\n  for (let i = 0; i < result.length; i++) {\r\n    for (let j = 0; j < Books.length; j++) {\r\n      if (result[i].id === Books[j].id) {\r\n        result[i].shelf = Books[j]?.shelf;\r\n      } else continue;\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"search-books\">\r\n      <div className=\"search-books-bar\">\r\n        <Link className=\"close-search\" to=\"/\">\r\n          Close\r\n        </Link>\r\n        <div className=\"search-books-input-wrapper\">\r\n          <input\r\n            type=\"text\"\r\n            value={query}\r\n            onChange={Search}\r\n            placeholder=\"Search by title or author\"\r\n          />\r\n        </div>\r\n      </div>\r\n      <div className=\"search-books-results\">\r\n        <ol className=\"books-grid\">\r\n          {result.length !== 0 && query !== \"\" ? (\r\n            result.map((b) => (\r\n              <li key={b?.id}>\r\n                {\" \"}\r\n                <div className=\"book\">\r\n                  <div className=\"book-top\">\r\n                    <div\r\n                      className=\"book-cover\"\r\n                      style={{\r\n                        width: 128,\r\n                        height: 193,\r\n                        backgroundImage: `url(${b?.imageLinks?.thumbnail})`,\r\n                      }}\r\n                    ></div>\r\n                    <ShelfUpdater book={b} updateShelf={updateShelf} />\r\n                  </div>\r\n                  <div className=\"book-title\">{b?.title}</div>\r\n                  <div className=\"book-authors\">{b?.authors}</div>\r\n                </div>{\" \"}\r\n              </li>\r\n            ))\r\n          ) : (\r\n            <p>No results found</p>\r\n          )}\r\n        </ol>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nBookSearch.propTypes = {\r\n  Books: PropTypes.array.isRequired,\r\n  updateShelf: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default BookSearch;\r\n","import ShelfUpdater from \"./ShelfUpdater\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst currentlyReading = ({ Books, updateShelf, Shelf }) => {\r\n  return (\r\n    <div className=\"bookshelf\">\r\n      <h2 className=\"bookshelf-title\">Currently Reading</h2>\r\n      <div className=\"bookshelf-books\">\r\n        <ol className=\"books-grid\">\r\n          {Books.filter((b) => b?.shelf === Shelf).map((b) => (\r\n            <li key={b?.id}>\r\n              <div className=\"book\">\r\n                <div className=\"book-top\">\r\n                  <div\r\n                    className=\"book-cover\"\r\n                    style={{\r\n                      width: 128,\r\n                      height: 193,\r\n                      backgroundImage: `url(${b?.imageLinks?.thumbnail})`,\r\n                    }}\r\n                  >\r\n                    {\" \"}\r\n                  </div>\r\n                  <ShelfUpdater book={b} updateShelf={updateShelf} />\r\n                </div>\r\n                <div className=\"book-title\">{b?.title}</div>\r\n                <div className=\"book-authors\">{b?.authors}</div>\r\n              </div>\r\n            </li>\r\n          ))}\r\n        </ol>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\ncurrentlyReading.propTypes = {\r\n  Books: PropTypes.array.isRequired,\r\n  updateShelf: PropTypes.func.isRequired,\r\n  Shelf: PropTypes.string.isRequired,\r\n};\r\nexport default currentlyReading;\r\n","import ShelfUpdater from \"./ShelfUpdater\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst WantToRead = ({ Books, updateShelf, Shelf }) => {\r\n  return (\r\n    <div className=\"bookshelf\">\r\n      <h2 className=\"bookshelf-title\">Want to Read</h2>\r\n      <div className=\"bookshelf-books\">\r\n        <ol className=\"books-grid\">\r\n          {Books.filter((b) => b?.shelf === Shelf).map((b) => (\r\n            <li key={b?.id}>\r\n              <div className=\"book\">\r\n                <div className=\"book-top\">\r\n                  <div\r\n                    className=\"book-cover\"\r\n                    style={{\r\n                      width: 128,\r\n                      height: 193,\r\n                      backgroundImage: `url(${b?.imageLinks?.thumbnail})`,\r\n                    }}\r\n                  ></div>\r\n                  <ShelfUpdater book={b} updateShelf={updateShelf} />\r\n                </div>\r\n                <div className=\"book-title\"> {b?.title}</div>\r\n                <div className=\"book-authors\">{b?.authors}</div>\r\n              </div>\r\n            </li>\r\n          ))}\r\n        </ol>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nWantToRead.propTypes = {\r\n  Books: PropTypes.array.isRequired,\r\n  updateShelf: PropTypes.func.isRequired,\r\n  Shelf: PropTypes.string.isRequired,\r\n};\r\nexport default WantToRead;\r\n","import ShelfUpdater from \"./ShelfUpdater\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Read = ({ Books, updateShelf, Shelf }) => {\r\n  return (\r\n    <div className=\"bookshelf\">\r\n      <h2 className=\"bookshelf-title\">Read</h2>\r\n      <div className=\"bookshelf-books\">\r\n        <ol className=\"books-grid\">\r\n          {Books.filter((b) => b?.shelf === Shelf).map((b) => (\r\n            <li key={b?.id}>\r\n              <div className=\"book\">\r\n                <div className=\"book-top\">\r\n                  <div\r\n                    className=\"book-cover\"\r\n                    style={{\r\n                      width: 128,\r\n                      height: 193,\r\n                      backgroundImage: `url(${b?.imageLinks?.thumbnail})`,\r\n                    }}\r\n                  ></div>\r\n                  <ShelfUpdater book={b} updateShelf={updateShelf} />\r\n                </div>\r\n                <div className=\"book-title\"> {b?.title}</div>\r\n                <div className=\"book-authors\">{b?.authors}</div>\r\n              </div>\r\n            </li>\r\n          ))}\r\n        </ol>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nRead.propTypes = {\r\n  Books: PropTypes.array.isRequired,\r\n  updateShelf: PropTypes.func.isRequired,\r\n  Shelf: PropTypes.string.isRequired,\r\n};\r\nexport default Read;\r\n","import { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport CurrentlyReading from \"./CurrentlyReading\";\r\nimport WantToRead from \"./WantToRead\";\r\nimport Read from \"./Read\";\r\nconst RenderBooks = ({ Books, updateShelf }) => {\r\n  return (\r\n    <div className=\"list-books\">\r\n      <div className=\"list-books-title\">\r\n        <h1>MyReads</h1>\r\n      </div>\r\n      <div className=\"list-books-content\">\r\n        <div>\r\n          <CurrentlyReading\r\n            Books={Books}\r\n            updateShelf={updateShelf}\r\n            Shelf=\"currentlyReading\"\r\n          />\r\n          <WantToRead\r\n            Books={Books}\r\n            updateShelf={updateShelf}\r\n            Shelf=\"wantToRead\"\r\n          />\r\n          <Read Books={Books} updateShelf={updateShelf} Shelf=\"read\" />\r\n        </div>\r\n      </div>\r\n      <div className=\"open-search\">\r\n        <Link to=\"/search\"> Add a book </Link>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nRenderBooks.propTypes = {\r\n  Books: PropTypes.array.isRequired,\r\n  updateShelf: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default RenderBooks;\r\n","import RenderBooks from \"./RenderBooks\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst HomeLibrary = ({ Books, updateShelf }) => {\r\n  return (\r\n    <div className=\"app\">\r\n      <RenderBooks Books={Books} updateShelf={updateShelf} />\r\n    </div>\r\n  );\r\n};\r\n\r\nHomeLibrary.propTypes = {\r\n  Books: PropTypes.array.isRequired,\r\n  updateShelf: PropTypes.func.isRequired,\r\n};\r\nexport default HomeLibrary;\r\n","import \"../css/App.css\";\r\nimport { Route, Routes } from \"react-router-dom\";\r\nimport BookSearch from \"./BookSearch\";\r\nimport HomeLibrary from \"./HomeLibrary\";\r\nimport { useEffect, useState } from \"react\";\r\nimport * as BooksAPI from \"./BooksAPI\";\r\n\r\nconst App = () => {\r\n  const [books, setBooks] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const getBooks = async () => {\r\n      const list = await BooksAPI.getAll();\r\n      setBooks(list);\r\n    };\r\n    getBooks();\r\n  }, []);\r\n\r\n  const doUpdate = (book, newShelf) => {\r\n    BooksAPI.update(book, newShelf);\r\n    book.shelf = newShelf;\r\n    setBooks(books.filter((b) => b?.id !== book.id).concat(book));\r\n  };\r\n\r\n  return (\r\n    <Routes>\r\n      <Route\r\n        exact\r\n        path=\"/\"\r\n        element={<HomeLibrary Books={books} updateShelf={doUpdate} />}\r\n      />\r\n      <Route path=\"/search\" element={<BookSearch updateShelf={doUpdate} Books={books} />} />\r\n    </Routes>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./css/index.css\";\r\nimport App from \"./components/App.js\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\n\r\nReactDOM.render(\r\n  <BrowserRouter>\r\n    <App />\r\n  </BrowserRouter>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}